@mixin styleText($color, $fs, $fw) {
  color: $color;
  font-size: $fs;
  font-weight: $fw;
}

@mixin styleButton($color, $bg-color, $border, $fs, $fw, $pd-y, $pd-x) {
  color: $color;
  background-color: $bg-color;
  border: 1px solid $border;
  font-size: $fs;
  font-weight: $fw;
  padding: $pd-y $pd-x;
  cursor: pointer;
  transition: all 0.5s;
}

@mixin hoverButton($color-hover, $bg-hover, $border-hover) {
  color: $color-hover;
  background-color: $bg-hover;
  border-color: $border-hover;
}

@mixin styleFormSearch(
  $bg-color,
  $bg-color-focus,
  $border-color-button,
  $bg-color-search,
  $border-color-search,
  $color
) {
  .input-group {
    background-color: $bg-color;
    .form-control,
    .input-group-text {
      background-color: transparent;
      transition: all 0.5s;
    }
    .form-control {
      border-radius: 0;
      box-shadow: none;
      border: 1px solid transparent;
      &:focus {
        background-color: $bg-color-focus;
        border-top-color: $border-color-button;
        border-left-color: $border-color-button;
        border-bottom-color: $border-color-button;
        & + .input-group-text {
          background-color: $bg-color-focus;
          border-top-color: $border-color-button;
          border-right-color: $border-color-button;
          border-bottom-color: $border-color-button;
          &:hover {
            cursor: pointer;
            background-color: $bg-color-search;
            border-top-color: $border-color-search;
            border-right-color: $border-color-search;
            border-bottom-color: $border-color-search;
            i {
              color: $color-white-0;
            }
          }
        }
      }
      &::placeholder {
        color: $color;
      }
    }
    .input-group-text {
      border-radius: 0;
      border: 1px solid transparent;
      z-index: 100;
      i {
        color: $bg-color-search;
      }
      &:hover {
        cursor: pointer;
        background-color: $bg-color-search;
        i {
          color: $color-white-0;
        }
      }
    }
  }
}

@mixin responsive($screen) {
  @if map-has-key($map: $breakpoints, $key: $screen) {
    $value: map-get(
      $map: $breakpoints,
      $key: $screen,
    );
    @media screen and (max-width: $value) {
      @content;
    }
  } @else {
    @warn "`{$screen}` isn't exist in breakpoints";
  }
}
